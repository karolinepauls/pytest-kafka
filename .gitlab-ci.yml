stages:
  - test
  - publish-test
  - publish-real

.test-template: &test-template
  stage: test
  script:
    - '[ -f pytest_kafka/py.typed ]'  # Typing marker must exist.
    # Work around a packaging problem with OpenJDK.
    - 'for i in $(seq 1 8); do mkdir -p "/usr/share/man/man$i"; done'
    - apt-get update -qq && apt-get install -y -qq openjdk-11-jre-headless
    - '[ ! -d dist ]'
    - ./setup.py sdist
    - '[ -d dist ]'
    - pip install .[dev]
    - flake8
    - mypy . --exclude build
    # Install the packaged project and make sure we're not importing code from the directory.
    - pip uninstall pytest-kafka -y
    - python ./pytest_kafka/install.py
    - rm pytest_kafka -r
    - 'pip install dist/pytest-kafka-*.tar.gz'
    - py.test -vv -s --durations=0

test-3.6:
  image: python:3.6-slim-buster
  <<: *test-template

test-3.7:
  image: python:3.7-slim-buster
  <<: *test-template

test-3.8:
  image: python:3.8-slim-buster
  <<: *test-template

test-3.9:
  image: python:3.9-slim-buster
  <<: *test-template

.publish-template: &publish-template
  image: python:3.8-slim-buster
  script:
    - '[[ -n "$TWINE_REPOSITORY_URL" ]]'
    # If not building a tag, suffix the version with an id:
    - 'if [[ -z "$CI_COMMIT_TAG" ]]; then export VERSION_SUFFIX="$CI_PIPELINE_IID"; fi'
    # Ensure consistent tagging:
    - |
      python3 -c '
      import setup
      from os import environ
      if "CI_COMMIT_TAG" in environ:
            assert "v" + setup.VERSION == environ["CI_COMMIT_TAG"], "VERSION in setup.py must be updated"'
    - pip install setuptools wheel twine
    - ./setup.py sdist bdist_wheel
    - ls dist
    - export TWINE_USERNAME=__token__
    - 'twine check dist/*'
    - 'twine upload --verbose --skip-existing dist/*'

publish-test-pypi:
  stage: publish-test
  <<: *publish-template
  variables:
    TWINE_REPOSITORY_URL: 'https://test.pypi.org/legacy/'
    TWINE_PASSWORD: $TESTPYPI_TWINE_PASSWORD

publish-real-pypi:
  stage: publish-real
  when: manual
  only:
    - tags
    - web
  <<: *publish-template
  variables:
    TWINE_REPOSITORY_URL: 'https://upload.pypi.org/legacy/'
    TWINE_PASSWORD: $REALPYPI_TWINE_PASSWORD
